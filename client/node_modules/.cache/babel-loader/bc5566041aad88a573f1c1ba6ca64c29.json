{"ast":null,"code":"import _slicedToArray from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/context/auth/AuthState.jsx\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./AuthContext\";\nimport authReducer from \"./AuthReducer\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, SET_NAME } from \"../types\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null,\n    appName: \"\"\n  };\n\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Load User\n\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/user\", formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const setAppName = appName => {\n    dispatch({\n      type: SET_NAME,\n      appName: appName\n    });\n    console.log(\"Set App Name Fired\");\n  }; // Logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors,\n      setAppName\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/context/auth/AuthState.jsx"],"names":["React","useReducer","axios","AuthContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","SET_NAME","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","appName","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","setAppName","console","log","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./AuthContext\";\nimport authReducer from \"./AuthReducer\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n  SET_NAME\n} from \"../types\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null,\n    appName: \"\"\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get(\"/api/auth\");\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n\n  // Register User\n  const register = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/user\", formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Login User\n  const login = async formData => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/auth\", formData, config);\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const setAppName = appName => {\n    dispatch({ type: SET_NAME, appName: appName });\n    console.log(\"Set App Name Fired\");\n  };\n\n  // Logout\n  const logout = () => dispatch({ type: LOGOUT });\n\n  // Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors,\n        setAppName\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}