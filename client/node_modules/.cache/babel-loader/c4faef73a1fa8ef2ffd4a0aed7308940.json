{"ast":null,"code":"import _objectSpread from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/DashboardPage/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect, useContext, Fragment } from 'react';\nimport UserDashboardCard from '../UserDashboardCard/UserDashboardCard.js';\nimport BtnCardReveal from '../../BtnList/BtnCardReveal'; // import JobModal from '../../Modal/JobModal'\n\nimport { useHttp } from '../../Hooks/Fetch';\nimport AuthContext from '../../../context/auth/AuthContext';\nimport setAuthToken from '../../../utils/setAuthToken';\nimport loadingImg from '../../../img/loading.gif';\nimport Navbar from '../../Layout/Navbar/Navbar';\nimport { inherits } from 'util';\n\nconst Dashboard = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        addJob = _useState2[0],\n        setAddJob = _useState2[1];\n\n  const mod = document.getElementById('modal');\n  useEffect(() => {\n    document.getElementById('modal').style.display = 'none';\n  }, []);\n\n  const ajCheck = () => {\n    if (addJob) {\n      mod.style.display = 'none';\n      setAddJob(false);\n    } else {\n      mod.style.display = 'block';\n      setAddJob(true);\n    }\n  }; //setting state for values of form =====================================================\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        submitted = _useState4[0],\n        setSubmitted = _useState4[1];\n\n  const _useState5 = useState({\n    name: '',\n    role: '',\n    jobType: '',\n    description: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newJob = _useState6[0],\n        setNewJob = _useState6[1];\n\n  const name = newJob.name,\n        role = newJob.role,\n        jobType = newJob.jobType,\n        description = newJob.description;\n\n  const onChange = e => setNewJob(_objectSpread({}, newJob, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(newJob);\n    setSubmitted(true);\n  };\n\n  let h = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  h['x-auth-token'] = props.token;\n  let fetchedJobs = useHttp('http://localhost:5000/api/job', 'POST', JSON.stringify(newJob), h, [submitted]);\n  const j = fetchedJobs[1];\n\n  if (submitted) {\n    console.log(\"\\n        \\n          this is the j return: \".concat(JSON.stringify(j), \"\\n          \\n          \\n          this is the new job obj: \").concat(newJob));\n    window.location.reload();\n  }\n\n  const authContext = useContext(AuthContext);\n  console.log(\"\\n    this is the token:\\n    \".concat(authContext.token, \"\\n    \\n    \")); // const loading = 'loading . . .';\n\n  const loading = 'loading . . .';\n\n  const _useState7 = useState(loading),\n        _useState8 = _slicedToArray(_useState7, 2),\n        profile = _useState8[0],\n        setProfile = _useState8[1];\n\n  const profileLoadingChecker = obj => {\n    obj ? setProfile(obj) : setProfile(loading);\n  };\n\n  const _useState9 = useState(loading),\n        _useState10 = _slicedToArray(_useState9, 2),\n        jobs = _useState10[0],\n        setJobs = _useState10[1];\n\n  const jobsLoadingChecker = arr => {\n    arr[0] ? setJobs(arr) : setJobs(loading);\n  };\n\n  const token = authContext.token; // let h = {\n  //     'Accept': 'application/json',\n  //     'Content-Type': 'application/json',\n  // }\n  // h['x-auth-token'] = token;\n  //fetch user profile =============================================================================================\n\n  let fetchedProfile = useHttp('http://localhost:5000/api/user', 'GET', '', h, []);\n  const p = fetchedProfile[1];\n  useEffect(() => profileLoadingChecker(p[0]), [p[0]]);\n  const profileloading = fetchedProfile[0];\n\n  if (profile) {\n    console.log(\"\\n        \\n            this is fetchedprofile\\n            \".concat(profile.name, \"\\n            \\n            \"));\n  } //fetch Job Profile ==============================================================================================\n\n\n  const jobloading = fetchedJobs[0];\n  useEffect(() => jobsLoadingChecker(j), [j]);\n  console.log(\"\\n        \\n        this is jobprofile\\n        \".concat(JSON.stringify(j), \"\\n        \\n        \")); // load dom ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    title: \"Dashboard\",\n    dropdown: true,\n    home: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"addJobBtn\",\n    onClick: () => ajCheck(),\n    className: \"btn-floating btn-large waves-effect waves-light black hoverable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"valign-wrapper center\",\n    style: {\n      height: '37px',\n      width: '45px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"add\")))), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(UserDashboardCard, {\n    name: profile === loading ? profile : profile.name,\n    email: profile === loading ? profile : profile.email,\n    jobTitle: profile === loading ? profile : profile.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), jobs === loading ? React.createElement(\"img\", {\n    src: loadingImg,\n    style: {\n      height: '200px',\n      width: '200px',\n      position: 'absolute',\n      top: 'calc(50% - 100px',\n      left: 'calc(50% - 100px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }) : jobs.map((v, i) => {\n    return React.createElement(BtnCardReveal, {\n      key: i,\n      jobId: v._id,\n      title: v.name,\n      description: v.description,\n      role: v.role,\n      type: v.jobType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    });\n  }), React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"modal\",\n    className: \"center valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"close\",\n    onClick: () => ajCheck(),\n    className: \"btn-floating btn-small waves-effect waves-light black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons center valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"close\")), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \" Add a New Job \"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"company\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"job name\",\n    required: true,\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"role\",\n    type: \"text\",\n    name: \"role\",\n    placeholder: \"role\",\n    required: true,\n    value: role,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"browser-default\",\n    name: \"jobType\",\n    value: jobType,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"job\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"hourly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Hourly Rate\"), React.createElement(\"option\", {\n    value: \"salary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Salary/Day Rate\"), React.createElement(\"option\", {\n    value: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Fixed Project Rate\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"description\",\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"description\",\n    required: true,\n    value: description,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"submit\",\n    id: \"newJobSubmit\",\n    className: \"btn-floating btn-small waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons center valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"send\")))))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/DashboardPage/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","useContext","Fragment","UserDashboardCard","BtnCardReveal","useHttp","AuthContext","setAuthToken","loadingImg","Navbar","inherits","Dashboard","props","addJob","setAddJob","mod","document","getElementById","style","display","ajCheck","submitted","setSubmitted","name","role","jobType","description","newJob","setNewJob","onChange","e","target","value","onSubmit","preventDefault","console","log","h","token","fetchedJobs","JSON","stringify","j","window","location","reload","authContext","loading","profile","setProfile","profileLoadingChecker","obj","jobs","setJobs","jobsLoadingChecker","arr","fetchedProfile","p","profileloading","jobloading","height","width","email","title","position","top","left","map","v","i","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CACA;;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,QAAT,QAAyB,MAAzB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA,oBAGKb,QAAQ,CAAC,KAAD,CAHb;AAAA;AAAA,QAGhBc,MAHgB;AAAA,QAGRC,SAHQ;;AAIvB,QAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC,CAAuCC,OAAvC,GAAiD,MAAjD;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,OAAO,GAAG,MAAM;AAClB,QAAIP,MAAJ,EAAY;AACRE,MAAAA,GAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoB,MAApB;AACAL,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KAHD,MAGO;AACHC,MAAAA,GAAG,CAACG,KAAJ,CAAUC,OAAV,GAAoB,OAApB;AACAL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GARD,CAXuB,CAqBvB;;;AArBuB,qBAsBWf,QAAQ,CAAC,KAAD,CAtBnB;AAAA;AAAA,QAsBhBsB,SAtBgB;AAAA,QAsBLC,YAtBK;;AAAA,qBAuBKvB,QAAQ,CAAC;AACjCwB,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,OAAO,EAAE,EAHwB;AAIjCC,IAAAA,WAAW,EAAE;AAJoB,GAAD,CAvBb;AAAA;AAAA,QAuBhBC,MAvBgB;AAAA,QAuBRC,SAvBQ;;AAAA,QA8BfL,IA9Be,GA8BsBI,MA9BtB,CA8BfJ,IA9Be;AAAA,QA8BTC,IA9BS,GA8BsBG,MA9BtB,CA8BTH,IA9BS;AAAA,QA8BHC,OA9BG,GA8BsBE,MA9BtB,CA8BHF,OA9BG;AAAA,QA8BMC,WA9BN,GA8BsBC,MA9BtB,CA8BMD,WA9BN;;AAgCvB,QAAMG,QAAQ,GAAGC,CAAC,IAAIF,SAAS,mBAAMD,MAAN;AAAc,KAACG,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAAxC,KAA/B;;AAEA,QAAMC,QAAQ,GAAGH,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAJD;;AAMA,MAAIe,CAAC,GAAG;AACJ,cAAU,kBADN;AAEJ,oBAAgB;AAFZ,GAAR;AAIAA,EAAAA,CAAC,CAAC,cAAD,CAAD,GAAoBzB,KAAK,CAAC0B,KAA1B;AAIA,MAAIC,WAAW,GAAGlC,OAAO,CAAC,+BAAD,EAAkC,MAAlC,EAA0CmC,IAAI,CAACC,SAAL,CAAed,MAAf,CAA1C,EAAkEU,CAAlE,EAAqE,CAAChB,SAAD,CAArE,CAAzB;AACA,QAAMqB,CAAC,GAAGH,WAAW,CAAC,CAAD,CAArB;;AAEA,MAAIlB,SAAJ,EAAe;AACXc,IAAAA,OAAO,CAACC,GAAR,uDAE0BI,IAAI,CAACC,SAAL,CAAeC,CAAf,CAF1B,0EAK6Bf,MAL7B;AAOAgB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AAED,QAAMC,WAAW,GAAG7C,UAAU,CAACK,WAAD,CAA9B;AAEA6B,EAAAA,OAAO,CAACC,GAAR,yCAEEU,WAAW,CAACR,KAFd,mBAhEuB,CAsEvB;;AACA,QAAMS,OAAO,GAAG,eAAhB;;AAvEuB,qBAwEOhD,QAAQ,CAACgD,OAAD,CAxEf;AAAA;AAAA,QAwEhBC,OAxEgB;AAAA,QAwEPC,UAxEO;;AAyEvB,QAAMC,qBAAqB,GAAIC,GAAD,IAAS;AAAEA,IAAAA,GAAG,GAAGF,UAAU,CAACE,GAAD,CAAb,GAAqBF,UAAU,CAACF,OAAD,CAAlC;AAA6C,GAAtF;;AAzEuB,qBA2EChD,QAAQ,CAACgD,OAAD,CA3ET;AAAA;AAAA,QA2EhBK,IA3EgB;AAAA,QA2EVC,OA3EU;;AA4EvB,QAAMC,kBAAkB,GAAIC,GAAD,IAAS;AAAEA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASF,OAAO,CAACE,GAAD,CAAhB,GAAwBF,OAAO,CAACN,OAAD,CAA/B;AAA0C,GAAhF;;AAEA,QAAMT,KAAK,GAAGQ,WAAW,CAACR,KAA1B,CA9EuB,CA+EvB;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAIkB,cAAc,GAAGnD,OAAO,CAAC,gCAAD,EAAmC,KAAnC,EAA0C,EAA1C,EAA8CgC,CAA9C,EAAiD,EAAjD,CAA5B;AACA,QAAMoB,CAAC,GAAGD,cAAc,CAAC,CAAD,CAAxB;AAEAxD,EAAAA,SAAS,CAAC,MAAMkD,qBAAqB,CAACO,CAAC,CAAC,CAAD,CAAF,CAA5B,EAAoC,CAACA,CAAC,CAAC,CAAD,CAAF,CAApC,CAAT;AAEA,QAAMC,cAAc,GAAGF,cAAc,CAAC,CAAD,CAArC;;AAGA,MAAIR,OAAJ,EAAa;AACTb,IAAAA,OAAO,CAACC,GAAR,uEAGMY,OAAO,CAACzB,IAHd;AAMH,GArGsB,CAyGvB;;;AACA,QAAMoC,UAAU,GAAGpB,WAAW,CAAC,CAAD,CAA9B;AAEAvC,EAAAA,SAAS,CAAC,MAAMsD,kBAAkB,CAACZ,CAAD,CAAzB,EAA8B,CAACA,CAAD,CAA9B,CAAT;AAEAP,EAAAA,OAAO,CAACC,GAAR,2DAGMI,IAAI,CAACC,SAAL,CAAeC,CAAf,CAHN,2BA9GuB,CAuHvB;;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,QAAQ,EAAE,IAApC;AAA0C,IAAA,IAAI,EAAE,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,EAAE,EAAC,WAAX;AAAuB,IAAA,OAAO,EAAE,MAAMtB,OAAO,EAA7C;AAAiD,IAAA,SAAS,EAAC,iEAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,KAAK,EAAE;AAAEwC,MAAAA,MAAM,EAAE,MAAV;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiF;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAjF,CADJ,CADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AACI,IAAA,IAAI,EAAEb,OAAO,KAAKD,OAAZ,GAAsBC,OAAtB,GAAgCA,OAAO,CAACzB,IADlD;AAEI,IAAA,KAAK,EAAEyB,OAAO,KAAKD,OAAZ,GAAsBC,OAAtB,GAAgCA,OAAO,CAACc,KAFnD;AAGI,IAAA,QAAQ,EAAEd,OAAO,KAAKD,OAAZ,GAAsBC,OAAtB,GAAgCA,OAAO,CAACe,KAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKX,IAAI,KAAKL,OAAT,GAAmB;AAAK,IAAA,GAAG,EAAEvC,UAAV;AAAsB,IAAA,KAAK,EAAE;AAAEoD,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE,OAA1B;AAAmCG,MAAAA,QAAQ,EAAE,UAA7C;AAAyDC,MAAAA,GAAG,EAAE,kBAA9D;AAAkFC,MAAAA,IAAI,EAAE;AAAxF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAAmKd,IAAI,CAACe,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnL,WAAO,oBAAC,aAAD;AACH,MAAA,GAAG,EAAEA,CADF;AAEH,MAAA,KAAK,EAAED,CAAC,CAACE,GAFN;AAGH,MAAA,KAAK,EAAEF,CAAC,CAAC7C,IAHN;AAIH,MAAA,WAAW,EAAE6C,CAAC,CAAC1C,WAJZ;AAKH,MAAA,IAAI,EAAE0C,CAAC,CAAC5C,IALL;AAMH,MAAA,IAAI,EAAE4C,CAAC,CAAC3C,OANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AASH,GAVmK,CAPxK,EAoBI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,SAAS,EAAC,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAmB,IAAA,OAAO,EAAE,MAAML,OAAO,EAAzC;AAA6C,IAAA,SAAS,EAAC,uDAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,sCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAM,IAAA,QAAQ,EAAEa,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,EAAE,EAAC,SAAV;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAgC,IAAA,IAAI,EAAC,MAArC;AAA4C,IAAA,WAAW,EAAC,UAAxD;AAAmE,IAAA,QAAQ,MAA3E;AAA4E,IAAA,KAAK,EAAEV,IAAnF;AAAyF,IAAA,QAAQ,EAAEM,QAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,WAAW,EAAC,MAArD;AAA4D,IAAA,QAAQ,MAApE;AAAqE,IAAA,KAAK,EAAEL,IAA5E;AAAkF,IAAA,QAAQ,EAAEK,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,IAAI,EAAC,SAAzC;AAAmD,IAAA,KAAK,EAAEJ,OAA1D;AAAmE,IAAA,QAAQ,EAAEI,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,QAAQ,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,EAII;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CADJ,CAPJ,EAeI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,EAAE,EAAC,aAAV;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAoC,IAAA,IAAI,EAAC,aAAzC;AAAuD,IAAA,WAAW,EAAC,aAAnE;AAAiF,IAAA,QAAQ,MAAzF;AAA0F,IAAA,KAAK,EAAEH,WAAjG;AAA8G,IAAA,QAAQ,EAAEG,QAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAfJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,QAA5B;AAAqC,IAAA,EAAE,EAAC,cAAxC;AAAuD,IAAA,SAAS,EAAC,iDAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,SAAS,EAAC,sCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,CAlBJ,CAFJ,CALJ,CAFJ,CApBJ,CANJ,CADJ;AAmEH,CA7LD;;AA+LA,eAAelB,SAAf","sourcesContent":["import React, { useState, useEffect, useContext, Fragment } from 'react'\nimport UserDashboardCard from '../UserDashboardCard/UserDashboardCard.js';\nimport BtnCardReveal from '../../BtnList/BtnCardReveal';\n// import JobModal from '../../Modal/JobModal'\nimport { useHttp } from '../../Hooks/Fetch';\nimport AuthContext from '../../../context/auth/AuthContext';\nimport setAuthToken from '../../../utils/setAuthToken';\nimport loadingImg from '../../../img/loading.gif';\nimport Navbar from '../../Layout/Navbar/Navbar';\nimport { inherits } from 'util';\n\nconst Dashboard = props => {\n\n\n    const [addJob, setAddJob] = useState(false);\n    const mod = document.getElementById('modal');\n\n    useEffect(() => {\n        document.getElementById('modal').style.display = 'none'\n\n    }, []);\n\n    const ajCheck = () => {\n        if (addJob) {\n            mod.style.display = 'none';\n            setAddJob(false);\n        } else {\n            mod.style.display = 'block';\n            setAddJob(true);\n        }\n    }\n\n    //setting state for values of form =====================================================\n    const [submitted, setSubmitted] = useState(false);\n    const [newJob, setNewJob] = useState({\n        name: '',\n        role: '',\n        jobType: '',\n        description: ''\n    });\n\n    const { name, role, jobType, description } = newJob;\n\n    const onChange = e => setNewJob({ ...newJob, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        console.log(newJob);\n        setSubmitted(true);\n    };\n\n    let h = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n    }\n    h['x-auth-token'] = props.token;\n\n\n\n    let fetchedJobs = useHttp('http://localhost:5000/api/job', 'POST', JSON.stringify(newJob), h, [submitted]);\n    const j = fetchedJobs[1];\n\n    if (submitted) {\n        console.log(`\n        \n          this is the j return: ${JSON.stringify(j)}\n          \n          \n          this is the new job obj: ${newJob}`)\n\n        window.location.reload();\n    }\n\n    const authContext = useContext(AuthContext);\n\n    console.log(`\n    this is the token:\n    ${authContext.token}\n    \n    `)\n\n    // const loading = 'loading . . .';\n    const loading = 'loading . . .';\n    const [profile, setProfile] = useState(loading)\n    const profileLoadingChecker = (obj) => { obj ? setProfile(obj) : setProfile(loading) };\n\n    const [jobs, setJobs] = useState(loading)\n    const jobsLoadingChecker = (arr) => { arr[0] ? setJobs(arr) : setJobs(loading) };\n\n    const token = authContext.token;\n    // let h = {\n    //     'Accept': 'application/json',\n    //     'Content-Type': 'application/json',\n    // }\n    // h['x-auth-token'] = token;\n\n    //fetch user profile =============================================================================================\n    let fetchedProfile = useHttp('http://localhost:5000/api/user', 'GET', '', h, []);\n    const p = fetchedProfile[1];\n\n    useEffect(() => profileLoadingChecker(p[0]), [p[0]]);\n\n    const profileloading = fetchedProfile[0];\n\n\n    if (profile) {\n        console.log(`\n        \n            this is fetchedprofile\n            ${profile.name}\n            \n            `);\n    }\n\n\n\n    //fetch Job Profile ==============================================================================================\n    const jobloading = fetchedJobs[0];\n\n    useEffect(() => jobsLoadingChecker(j), [j]);\n\n    console.log(`\n        \n        this is jobprofile\n        ${JSON.stringify(j)}\n        \n        `);\n\n\n\n    // load dom ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\n    return (\n        <div>\n            <Navbar title=\"Dashboard\" dropdown={true} home={false}>\n                <button id='addJobBtn' onClick={() => ajCheck()} className=\"btn-floating btn-large waves-effect waves-light black hoverable\">\n                    <div className='valign-wrapper center' style={{ height: '37px', width: '45px' }}><i className=\"material-icons\" >add</i></div>\n                </button>\n            </Navbar>\n            <main>\n                <UserDashboardCard\n                    name={profile === loading ? profile : profile.name}\n                    email={profile === loading ? profile : profile.email}\n                    jobTitle={profile === loading ? profile : profile.title}\n                />\n\n                {jobs === loading ? <img src={loadingImg} style={{ height: '200px', width: '200px', position: 'absolute', top: 'calc(50% - 100px', left: 'calc(50% - 100px' }} /> : jobs.map((v, i) => {\n                    return <BtnCardReveal\n                        key={i}\n                        jobId={v._id}\n                        title={v.name}\n                        description={v.description}\n                        role={v.role}\n                        type={v.jobType}\n                    />\n\n                })\n                }\n\n                <Fragment>\n\n                    <div id='modal' className='center valign-wrapper'>\n                        <button id='close' onClick={() => ajCheck()} className=\"btn-floating btn-small waves-effect waves-light black\">\n                            <i className=\"material-icons center valign-wrapper\">close</i>\n                        </button>\n\n                        <div className=\"container\">\n                            <div id='title'> Add a New Job </div>\n                            <form onSubmit={onSubmit}>\n                                <div className=\"form-group\">\n                                    <input id=\"company\" type=\"text\" name='name' placeholder=\"job name\" required value={name} onChange={onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input id=\"role\" type=\"text\" name='role' placeholder=\"role\" required value={role} onChange={onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"browser-default\" name='jobType' value={jobType} onChange={onChange}>\n                                        <option value=\"job\" disabled />\n                                        <option value=\"hourly\">Hourly Rate</option>\n                                        <option value=\"salary\">Salary/Day Rate</option>\n                                        <option value=\"fixed\">Fixed Project Rate</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input id=\"description\" type=\"text\" name='description' placeholder=\"description\" required value={description} onChange={onChange} />\n                                </div>\n                                <div>\n                                    <button type='submit' value='submit' id=\"newJobSubmit\" className=\"btn-floating btn-small waves-effect waves-light\">\n                                        <i className=\"material-icons center valign-wrapper\">send</i>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </Fragment >\n            </main>\n        </div>\n    )\n\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}