{"ast":null,"code":"import _objectSpread from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/Modal/JobModal.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './JobModal.css';\nimport { useHttp } from '../Hooks/Fetch';\n\nconst JobModal = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        addJob = _useState2[0],\n        setAddJob = _useState2[1];\n\n  const mod = document.getElementById('modal');\n  useEffect(() => {\n    document.getElementById('modal').style.display = 'none';\n  }, []);\n\n  const ajCheck = () => {\n    if (addJob) {\n      mod.style.display = 'none';\n      setAddJob(false);\n    } else {\n      mod.style.display = 'block';\n      setAddJob(true);\n    }\n  }; //setting state for values of form =====================================================\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        submitted = _useState4[0],\n        setSubmitted = _useState4[1];\n\n  const _useState5 = useState({\n    name: '',\n    role: '',\n    jobType: 'jobType',\n    description: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newJob = _useState6[0],\n        setNewJob = _useState6[1];\n\n  const name = newJob.name,\n        role = newJob.role,\n        jobType = newJob.jobType,\n        description = newJob.description;\n\n  const onChange = e => setNewJob(_objectSpread({}, newJob, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(newJob);\n    setSubmitted(true);\n  };\n\n  let h = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  h['x-auth-token'] = props.token;\n  let fetchedJobs = useHttp('http://localhost:5000/api/job', 'POST', JSON.stringify(newJob), h, [submitted]);\n  const j = fetchedJobs[1];\n\n  if (submitted) {\n    console.log(\"\\n      \\n        this is the j return: \".concat(JSON.stringify(j), \"\\n        \\n        \\n        this is the new job obj: \").concat(newJob));\n    window.location.reload();\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"addJobBtn\",\n    onClick: () => ajCheck(),\n    className: \"btn-floating btn-large waves-effect waves-light transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"add\")), React.createElement(\"div\", {\n    id: \"modal\",\n    className: \"center valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"close\",\n    onClick: () => ajCheck(),\n    className: \"btn-floating btn-small waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons center valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"close\")), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col s12 m12 l12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \" Add a New Job \"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"company\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"job name\",\n    required: true,\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Company\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"role\",\n    type: \"text\",\n    name: \"role\",\n    placeholder: \"role\",\n    required: true,\n    value: role,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"role\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Role\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"jobType\",\n    value: jobType,\n    onChange: onChange,\n    style: {\n      display: 'block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"job\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"hourly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Hourly Rate\"), React.createElement(\"option\", {\n    value: \"salary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Salary/Day Rate\"), React.createElement(\"option\", {\n    value: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Fixed Project Rate\"))), React.createElement(\"label\", {\n    htmlFor: \"select-job-type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Select Job Type\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"description\",\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"description\",\n    required: true,\n    value: description,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Description\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"submit\",\n    id: \"newJobSubmit\",\n    className: \"btn-floating btn-small waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons center valign-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"send\")))))))));\n};\n\nexport default JobModal;","map":{"version":3,"sources":["/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/Modal/JobModal.js"],"names":["React","useState","useEffect","Fragment","useHttp","JobModal","props","addJob","setAddJob","mod","document","getElementById","style","display","ajCheck","submitted","setSubmitted","name","role","jobType","description","newJob","setNewJob","onChange","e","target","value","onSubmit","preventDefault","console","log","h","token","fetchedJobs","JSON","stringify","j","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './JobModal.css';\nimport { useHttp } from '../Hooks/Fetch';\n\nconst JobModal = props => {\n  const [addJob, setAddJob] = useState(false);\n  const mod = document.getElementById('modal');\n\n  useEffect(() => {\n    document.getElementById('modal').style.display = 'none'\n\n  }, []);\n\n  const ajCheck = () => {\n    if (addJob) {\n      mod.style.display = 'none';\n      setAddJob(false);\n    } else {\n      mod.style.display = 'block';\n      setAddJob(true);\n    }\n  }\n\n  //setting state for values of form =====================================================\n  const [submitted, setSubmitted] = useState(false);\n  const [newJob, setNewJob] = useState({\n    name: '',\n    role: '',\n    jobType: 'jobType',\n    description: ''\n  });\n\n\n  const { name, role, jobType, description } = newJob;\n\n  const onChange = e => setNewJob({ ...newJob, [e.target.name]: e.target.value });\n\n\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(newJob);\n    setSubmitted(true);\n  };\n\n  let h = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  }\n  h['x-auth-token'] = props.token;\n\n\n\n  let fetchedJobs = useHttp('http://localhost:5000/api/job', 'POST', JSON.stringify(newJob), h, [submitted]);\n  const j = fetchedJobs[1];\n\n  if (submitted) {\n    console.log(`\n      \n        this is the j return: ${JSON.stringify(j)}\n        \n        \n        this is the new job obj: ${newJob}`)\n\n    window.location.reload();\n  }\n\n\n\n\n\n\n  return (\n    <Fragment>\n      <button id='addJobBtn' onClick={() => ajCheck()} className=\"btn-floating btn-large waves-effect waves-light transparent\">\n        <i className=\"material-icons\">add</i>\n      </button>\n\n      <div id='modal' className='center valign-wrapper'>\n        <button id='close' onClick={() => ajCheck()} className=\"btn-floating btn-small waves-effect waves-light\">\n          <i className=\"material-icons center valign-wrapper\">close</i>\n        </button>\n\n\n\n\n        <div className=\"container\">\n          <div className=\"row card\">\n            <div className=\"col s12 m12 l12\">\n              <div id='title'> Add a New Job </div>\n\n\n              <form onSubmit={onSubmit}>\n\n                <div className=\"form-group\">\n                  <input id=\"company\" type=\"text\" name='name' placeholder=\"job name\" required value={name} onChange={onChange} />\n                  <label htmlFor=\"company\">Company</label>\n                </div>\n\n                <div className=\"form-group\">\n                  <input id=\"role\" type=\"text\" name='role' placeholder=\"role\" required value={role} onChange={onChange} />\n                  <label htmlFor=\"role\">Role</label>\n                </div>\n\n                <div className=\"form-group\">\n                  <select name='jobType' value={jobType} onChange={onChange} style={{ display: 'block' }}>\n                    <option value=\"job\" disabled />\n                    <option value=\"hourly\">Hourly Rate</option>\n                    <option value=\"salary\">Salary/Day Rate</option>\n                    <option value=\"fixed\">Fixed Project Rate</option>\n                  </select>\n                </div>\n                <label htmlFor=\"select-job-type\">Select Job Type</label>\n\n                <div className=\"form-group\">\n                  <input id=\"description\" type=\"text\" name='description' placeholder=\"description\" required value={description} onChange={onChange} />\n                  <label htmlFor=\"description\">Description</label>\n                </div>\n\n                <div>\n                  <button type='submit' value='submit' id=\"newJobSubmit\" className=\"btn-floating btn-small waves-effect waves-light\">\n                    <i className=\"material-icons center valign-wrapper\">send</i>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment >\n  );\n}\nexport default JobModal;"]},"metadata":{},"sourceType":"module"}