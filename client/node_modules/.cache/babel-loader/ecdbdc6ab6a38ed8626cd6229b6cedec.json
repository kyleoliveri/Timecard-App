{"ast":null,"code":"import _slicedToArray from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/Timecard/TimecardPage.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../../context/auth/AuthContext';\nimport { useHttp } from '../Hooks/Fetch';\nimport setAuthToken from '../../utils/setAuthToken';\nimport CreateNewBtn from './CreateNewBtn';\nimport TcList from './TcList';\nimport loadingImg from '../../img/loading.gif';\nimport './TimecardPage.css';\nimport Navbar from '../Layout/Navbar/Navbar';\n\nconst TimecardPage = ({\n  match\n}) => {\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    authContext.loadUser();\n    authContext.setAppName(\"Dashboard\"); // eslint-disable-next-line\n  }, []);\n\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    window.location.href = '/';\n  }\n\n  console.log(\"\\n      this is the token:\\n      \".concat(authContext.token, \"\\n      \\n      \")); // const loading = 'loading . . .';\n\n  const loading = 'loading . . .';\n\n  const _useState = useState(loading),\n        _useState2 = _slicedToArray(_useState, 2),\n        tc = _useState2[0],\n        setTc = _useState2[1];\n\n  const tcLoadingChecker = arr => {\n    arr[0] ? setTc(arr) : setTc(loading);\n  };\n\n  const token = authContext.token;\n  let h = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  h['x-auth-token'] = token;\n  const jid = match.params.id;\n  console.log(\"\\n      \\n      this is the JID:\\n      \".concat(jid, \"\\n      \\n      \\n      \")); //fetch timecards ==============================================================================================\n\n  let fetchedTc = useHttp('http://localhost:5000/api/timecard/' + jid, 'GET', '', h, []);\n  const tcloading = fetchedTc[0];\n  const t = fetchedTc[1];\n  useEffect(() => tcLoadingChecker(t), [t]);\n  console.log(\"\\n          \\n          this is timecards\\n          \".concat(JSON.stringify(t), \"\\n          \\n          \"));\n  console.log(\"\\n  \\n  this is the params id!!!!!\\n  \".concat(match.params.id, \"\\n  \"));\n  return [React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    title: \"Timecards\",\n    dropdown: false,\n    home: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(CreateNewBtn, {\n    jid: jid,\n    token: token,\n    h: h,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), tc === loading ? React.createElement(\"img\", {\n    src: loadingImg,\n    style: {\n      height: '200px',\n      width: '200px',\n      position: 'absolute',\n      top: 'calc(50% - 100px',\n      left: 'calc(50% - 100px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }) : tc.map((v, i) => {\n    return React.createElement(TcList, {\n      key: i,\n      tcId: v._id,\n      date: v.date,\n      clockIn: v.clockIn,\n      clockOut: v.clockOut || '',\n      lunchIn: v.lunchIn || '',\n      lunchOut: v.lunchOut || '',\n      breakIn: v.breakIn || '',\n      breakOut: v.breakOut || '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }))))];\n};\n\nexport default TimecardPage;","map":{"version":3,"sources":["/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/Timecard/TimecardPage.js"],"names":["React","useState","useEffect","useContext","AuthContext","useHttp","setAuthToken","CreateNewBtn","TcList","loadingImg","Navbar","TimecardPage","match","authContext","loadUser","setAppName","localStorage","token","window","location","href","console","log","loading","tc","setTc","tcLoadingChecker","arr","h","jid","params","id","fetchedTc","tcloading","t","JSON","stringify","height","width","position","top","left","map","v","i","_id","date","clockIn","clockOut","lunchIn","lunchOut","breakIn","breakOut"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport AuthContext from '../../context/auth/AuthContext';\nimport { useHttp } from '../Hooks/Fetch';\nimport setAuthToken from '../../utils/setAuthToken';\nimport CreateNewBtn from './CreateNewBtn';\nimport TcList from './TcList';\nimport loadingImg from '../../img/loading.gif';\nimport './TimecardPage.css';\nimport Navbar from '../Layout/Navbar/Navbar';\n\nconst TimecardPage = ( {match} ) => {\n  const authContext = useContext(AuthContext);\n  \n      useEffect(() => {\n          authContext.loadUser();\n          authContext.setAppName(\"Dashboard\");\n          // eslint-disable-next-line\n      }, [])\n  \n  \n      if (localStorage.token) {\n          setAuthToken(localStorage.token);\n      } else {\n          window.location.href = '/';\n      }\n  \n  \n      console.log(`\n      this is the token:\n      ${authContext.token}\n      \n      `)\n  \n\n\n  \n      // const loading = 'loading . . .';\n      const loading = 'loading . . .';\n      const [tc, setTc] = useState(loading)\n      const tcLoadingChecker = (arr) => { arr[0] ? setTc(arr) : setTc(loading) };\n  \n      const token = authContext.token;\n      let h = {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      }\n      h['x-auth-token'] = token;\n      const jid = match.params.id;\n      console.log(`\n      \n      this is the JID:\n      ${jid}\n      \n      \n      `)\n\n      //fetch timecards ==============================================================================================\n      let fetchedTc = useHttp('http://localhost:5000/api/timecard/'+jid, 'GET', '', h, []);\n      const tcloading = fetchedTc[0];\n      const t = fetchedTc[1];\n  \n      useEffect(() => tcLoadingChecker(t), [t]);\n  \n      console.log(`\n          \n          this is timecards\n          ${JSON.stringify(t)}\n          \n          `);\n\n  console.log(`\n  \n  this is the params id!!!!!\n  ${match.params.id}\n  `)\n\n\n  return [\n    <div>\n      <Navbar title=\"Timecards\" dropdown = { false } home = { true } />\n      <main>\n        <body>\n          <CreateNewBtn jid = {jid} token = {token} h = {h}/>\n          {tc === loading ? <img src = {loadingImg} style = {{height: '200px', width: '200px', position: 'absolute', top: 'calc(50% - 100px', left: 'calc(50% - 100px'}}/> : tc.map((v, i) => {\n                        return <TcList\n                        key = { i }\n                        tcId = { v._id }\n                        date = { v.date }\n                        clockIn = { v.clockIn }\n                        clockOut = { v.clockOut || '' }\n                        lunchIn = { v.lunchIn || '' }\n                        lunchOut = { v.lunchOut || '' }\n                        breakIn = { v.breakIn || '' }\n                        breakOut = { v.breakOut || '' }\n                        />\n                    })\n                    }\n\n          {/* <TcList jobId = {match.params.id}/> */}\n        </body>\n      </main>\n    </div>\n  ];\n};\n\nexport default TimecardPage;"]},"metadata":{},"sourceType":"module"}