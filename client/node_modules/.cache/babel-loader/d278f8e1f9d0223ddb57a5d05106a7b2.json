{"ast":null,"code":"import _objectSpread from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/EditJob/EditJob.js\";\nimport React, { Fragment, useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/AuthContext';\nimport setAuthToken from '../../utils/setAuthToken';\nimport Navbar from '../Layout/Navbar/Navbar';\nimport './EditJob.css';\n\nconst EditJob = ({\n  match\n}) => {\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    authContext.loadUser();\n    fetchJob(); // eslint-disable-next-line\n  }, []);\n\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    window.location.href = '/';\n  }\n\n  const jid = match.params.id;\n\n  const _useState = useState({\n    name: '',\n    role: '',\n    jobType: '',\n    description: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        job = _useState2[0],\n        setJob = _useState2[1];\n\n  const name = job.name,\n        role = job.role,\n        jobType = job.jobType,\n        description = job.description;\n\n  const onChange = e => setJob(_objectSpread({}, job, {\n    [e.target.name]: e.target.value\n  }));\n\n  const fetchJob = () => {\n    //formmatting form responses into payload obj\n    const headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    headers['x-auth-token'] = authContext.token;\n    fetch('/api/job/' + jid, {\n      method: 'GET',\n      headers\n    }).then(r => r.json()).then(r => {\n      console.log(r);\n      let res = JSON.stringify(r[0]);\n      setJob(_objectSpread({}, job, {\n        name: r[0].name,\n        role: r[0].role,\n        jobType: r[0].jobType,\n        description: r[0].description\n      }));\n    }).catch(e => console.error('ERROR: ', e));\n  };\n\n  const editJob = obj => {\n    //formmatting form responses into payload obj\n    const headers = {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    };\n    headers['x-auth-token'] = authContext.token;\n    var newObj = JSON.stringify(obj);\n    fetch('/api/job/' + jid, {\n      method: 'PUT',\n      body: newObj,\n      headers\n    }).then(r => r.json()).then(r => {\n      let res = JSON.stringify(r[0]);\n      console.log(\"this is the second then after editProfiile() fetch \\n                \".concat(res));\n    }).catch(e => console.error('ERROR: ', e));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    var temp = _objectSpread({}, job, {\n      name,\n      role,\n      jobType,\n      description\n    });\n\n    async function temp1() {\n      let response = await editJob(temp);\n      console.log(JSON.stringify(response), \"sucess\");\n      setTimeout(() => {\n        window.location.href = '/';\n      }, 1000);\n    }\n\n    temp1();\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    title: \"Edit Job\",\n    dropdown: false,\n    home: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Job #\", jid), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \" Add a New Job \"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"company\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"job name\",\n    required: true,\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"role\",\n    type: \"text\",\n    name: \"role\",\n    placeholder: \"role\",\n    required: true,\n    value: role,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"browser-default\",\n    name: \"jobType\",\n    value: jobType,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"job\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"hourly\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Hourly Rate\"), React.createElement(\"option\", {\n    value: \"salary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Salary/Day Rate\"), React.createElement(\"option\", {\n    value: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Fixed Project Rate\"))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"description\",\n    type: \"text\",\n    name: \"description\",\n    placeholder: \"description\",\n    required: true,\n    value: description,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"submit\",\n    id: \"editJob\",\n    className: \"waves-effect waves-light btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    type: \"submit\",\n    value: \"submit\",\n    id: \"deleteJob\",\n    className: \"btn red waves-effect waves-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Delete\"))))))));\n};\n\nexport default EditJob;","map":{"version":3,"sources":["/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/EditJob/EditJob.js"],"names":["React","Fragment","useState","useContext","useEffect","AuthContext","setAuthToken","Navbar","EditJob","match","authContext","loadUser","fetchJob","localStorage","token","window","location","href","jid","params","id","name","role","jobType","description","job","setJob","onChange","e","target","value","headers","fetch","method","then","r","json","console","log","res","JSON","stringify","catch","error","editJob","obj","newObj","body","onSubmit","preventDefault","temp","temp1","response","setTimeout"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useContext, useEffect } from 'react';\nimport AuthContext from '../../context/auth/AuthContext';\nimport setAuthToken from '../../utils/setAuthToken';\nimport Navbar from '../Layout/Navbar/Navbar';\nimport './EditJob.css';\nconst EditJob = ({ match }) => {\n\n    const authContext = useContext(AuthContext);\n\n    useEffect(() => {\n        authContext.loadUser();\n        fetchJob();\n        // eslint-disable-next-line\n    }, [])\n\n\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    } else {\n        window.location.href = '/';\n    }\n    const jid = match.params.id;\n\n    const [job, setJob] = useState({\n        name: '',\n        role: '',\n        jobType: '',\n        description: ''\n    });\n\n    const { name, role, jobType, description } = job;\n\n    const onChange = e => setJob({ ...job, [e.target.name]: e.target.value });\n\n    const fetchJob = () => {\n        //formmatting form responses into payload obj\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n        headers['x-auth-token'] = authContext.token;\n\n        fetch('/api/job/' + jid, {\n            method: 'GET',\n            headers\n        }).then(r => r.json())\n            .then(r => {\n                console.log(r);\n                let res = JSON.stringify(r[0]);\n                setJob({\n                    ...job,\n                    name: r[0].name,\n                    role: r[0].role,\n                    jobType: r[0].jobType,\n                    description: r[0].description\n                })\n            })\n            .catch(e => console.error('ERROR: ', e));\n    }\n\n\n    const editJob = (obj) => {\n        //formmatting form responses into payload obj\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n        headers['x-auth-token'] = authContext.token;\n        var newObj = JSON.stringify(obj);\n        fetch('/api/job/' + jid, {\n            method: 'PUT',\n            body: newObj,\n            headers\n        }).then(r => r.json())\n            .then(r => {\n                let res = JSON.stringify(r[0]);\n                console.log(`this is the second then after editProfiile() fetch \n                ${res}`);\n            })\n            .catch(e => console.error('ERROR: ', e));\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        var temp = {\n            ...job,\n            name,\n            role,\n            jobType,\n            description\n        };\n\n        async function temp1() {\n            let response = await editJob(temp);\n            console.log(JSON.stringify(response), \"sucess\")\n            setTimeout(() => {\n                window.location.href = '/';\n            }, 1000);\n\n        }\n        temp1();\n    }\n\n    return (\n        <Fragment>\n            <Navbar title=\"Edit Job\" dropdown={false} home={true} />\n            <main>\n                <h5 className=\"center\">Job #{jid}</h5>\n                <div className=\"container\">\n                    <div className=\"card\">\n                        <div className=\"card-content\">\n                            <div id='title'> Add a New Job </div>\n                            <form onSubmit={onSubmit}>\n                                <div className=\"form-group\">\n                                    <input id=\"company\" type=\"text\" name='name' placeholder=\"job name\" required value={name} onChange={onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input id=\"role\" type=\"text\" name='role' placeholder=\"role\" required value={role} onChange={onChange} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select className=\"browser-default\" name='jobType' value={jobType} onChange={onChange}>\n                                        <option value=\"job\" disabled />\n                                        <option value=\"hourly\">Hourly Rate</option>\n                                        <option value=\"salary\">Salary/Day Rate</option>\n                                        <option value=\"fixed\">Fixed Project Rate</option>\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <input id=\"description\" type=\"text\" name='description' placeholder=\"description\" required value={description} onChange={onChange} />\n                                </div>\n                                <div className=\"center\">\n                                    <button type='submit' value='submit' id=\"editJob\" className=\"waves-effect waves-light btn\">Edit</button>\n                                    <button type='submit' value='submit' id=\"deleteJob\" className=\"btn red waves-effect waves-light\">Delete</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </Fragment>\n    );\n}\n\nexport default EditJob;"]},"metadata":{},"sourceType":"module"}