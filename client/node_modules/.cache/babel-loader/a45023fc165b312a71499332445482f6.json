{"ast":null,"code":"import _slicedToArray from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/BtnList/clockingBtns.js\";\nimport React, { useState, useEffect } from 'react';\nimport './ClockingBtns.css';\nimport moment from 'moment';\nimport { useHttp } from '../Hooks/Fetch';\n\nconst ClockingBtns = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        openTc = _useState2[0],\n        setOpenTc = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tcid = _useState4[0],\n        setTcid = _useState4[1];\n\n  const token = props.token;\n  const jobId = props.jobId;\n  const state = props.state;\n\n  const newDate = () => moment(new Date()).utc().format();\n\n  let timecard = props.tc;\n  let headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  headers['x-auth-token'] = token; // let fetchedTc = useHttp('/api/timecard/'+jobId, 'GET', '', headers, []);\n  // const latestTc = fetchedTc[1];\n  // console.log('this is the latest TC' , latestTc[0])\n\n  console.log(\"\\n    \\n    THIS IS THE DATE NOW INSIDE CLOCKING BTNS:\\n    \".concat(moment(newDate()).local().format('LLLL X'), \"\\n    \\n    \\n    \\n    \\n    \"));\n\n  if (timecard) {\n    if (openTc !== timecard) {\n      setOpenTc(timecard);\n      setTcid(timecard._id);\n      console.log(\"------------------ OPENTC HOOK SET -----------------------\");\n    }\n\n    console.log(\"\\n\\n        THIS IS THE TIMECARD OBJ FROM PROPS:\\n        \", timecard, \"\\n\\n        \", tcid, \"\\n\\n\\n        \");\n  }\n\n  useEffect(() => {\n    console.log('THIS IS THE OPEN TC:      ', openTc);\n  }, [openTc]);\n\n  const newTc = (id, method, body) => {\n    // let tcObj = {msg: 'nothing in here yet'};\n    console.log(\"\\n        \\n        this is \\\"h\\\" inside of clockingbtns\\n        \\n        \\n        \".concat(JSON.stringify(headers), \"\\n        \\n        \\n        \\n        \"));\n\n    async function f() {\n      //fetch request\n      const r = await fetch(\"/api/timecard/\".concat(id), {\n        method,\n        body: JSON.stringify(body),\n        headers\n      }); // console.log(` this is the r with the r.json(): \n      //     ${JSON.stringify(r)}`);\n\n      const r1 = await r.json();\n      const res = await r1;\n      console.log('THIS IS RES!!!!!!', res);\n      setOpenTc(res);\n    }\n\n    f();\n  }; //functions =================================================================\n\n\n  const d = () => new Date();\n\n  const _useState5 = useState(state ? state : ['Clock In']),\n        _useState6 = _slicedToArray(_useState5, 2),\n        btnValues = _useState6[0],\n        setBtnValues = _useState6[1];\n\n  useEffect(() => {\n    setBtnValues(state ? state : ['Clock In']);\n  }, [state]);\n\n  const btnSetter = (state, jid) => {\n    let newTcBody; // eslint-disable-next-line\n\n    switch (state) {\n      case 'Clock In':\n        console.log('this is the jid', jid);\n        newTcBody = {\n          date: d(),\n          clockIn: d()\n        };\n        newTc(jobId, 'POST', newTcBody);\n        setBtnValues(['Lunch In', 'Break In', 'Clock Out']);\n        break;\n\n      case 'Lunch In':\n        newTcBody = {\n          lunchIn: d()\n        };\n        console.log(\"++++++++++++ this is the body of the put lunchIn request +++++++++++++++++\\n                  \", newTcBody, tcid);\n        newTc(tcid, 'PUT', newTcBody);\n        setBtnValues(['Lunch Out']);\n        break;\n\n      case 'Lunch Out':\n        newTcBody = {\n          lunchOut: d()\n        };\n        console.log(\"++++++++++++ this is the body of the put lunchOut request +++++++++++++++++\\n                    \", newTcBody, tcid);\n        newTc(tcid, 'PUT', newTcBody);\n        setBtnValues(['Break In', 'Clock Out']);\n        break;\n\n      case 'Break In':\n        newTcBody = {\n          breakIn: d()\n        };\n        console.log(\"++++++++++++ this is the body of the put breakIn request +++++++++++++++++\\n                    \", newTcBody, tcid);\n        newTc(tcid, 'PUT', newTcBody);\n        setBtnValues(['Break Out']);\n        break;\n\n      case 'Break Out':\n        newTcBody = {\n          breakOut: d()\n        };\n        console.log(\"++++++++++++ this is the body of the put breakOut request +++++++++++++++++\\n                    \", newTcBody, tcid);\n        newTc(tcid, 'PUT', newTcBody);\n        setBtnValues(['Break In', 'Clock Out']);\n        break;\n\n      case 'Clock Out':\n        newTcBody = {\n          clockOut: d()\n        };\n        console.log(\"++++++++++++ this is the body of the put clockOut request +++++++++++++++++\\n                    \", newTcBody, tcid);\n        newTc(tcid, 'PUT', newTcBody);\n        setBtnValues(['Clock In']);\n        break;\n    }\n  };\n\n  const btnArr = btnValues.map((v, i) => React.createElement(\"li\", {\n    key: i,\n    \"data-id\": jobId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"btnList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn-floating btn-small waves-effect waves-light blue hoverable\",\n    value: v,\n    onClick: () => btnSetter(v, jobId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"add_alarm\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, v))));\n  return React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, btnArr);\n};\n\nexport default ClockingBtns;","map":{"version":3,"sources":["/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/BtnList/clockingBtns.js"],"names":["React","useState","useEffect","moment","useHttp","ClockingBtns","props","openTc","setOpenTc","tcid","setTcid","token","jobId","state","newDate","Date","utc","format","timecard","tc","headers","console","log","local","_id","newTc","id","method","body","JSON","stringify","f","r","fetch","r1","json","res","d","btnValues","setBtnValues","btnSetter","jid","newTcBody","date","clockIn","lunchIn","lunchOut","breakIn","breakOut","clockOut","btnArr","map","v","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport './ClockingBtns.css';\nimport moment from 'moment';\nimport { useHttp } from '../Hooks/Fetch';\n\n\n\nconst ClockingBtns = (props) => {\n    const [openTc, setOpenTc] = useState({});\n    const [tcid, setTcid] = useState();\n    const token = props.token;\n    const jobId = props.jobId;\n    const state = props.state;\n    const newDate = () => moment(new Date()).utc().format();\n    let timecard = props.tc;\n    let headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n    }\n    headers['x-auth-token'] = token;\n\n    // let fetchedTc = useHttp('/api/timecard/'+jobId, 'GET', '', headers, []);\n    // const latestTc = fetchedTc[1];\n    // console.log('this is the latest TC' , latestTc[0])\n\n    console.log(`\n    \n    THIS IS THE DATE NOW INSIDE CLOCKING BTNS:\n    ${moment(newDate()).local().format('LLLL X')}\n    \n    \n    \n    \n    `)\n\n    if(timecard){\n        if(openTc !== timecard){\n            setOpenTc(timecard);\n            setTcid(timecard._id);\n            console.log(`------------------ OPENTC HOOK SET -----------------------`)\n        }\n        console.log(`\n\n        THIS IS THE TIMECARD OBJ FROM PROPS:\n        `, timecard, `\n\n        `,tcid,`\n\n\n        `)\n}\n    \n\n\n    useEffect( () => { console.log('THIS IS THE OPEN TC:      ', openTc) }, [openTc]);\n\n    const newTc = (id, method, body) => {\n        // let tcObj = {msg: 'nothing in here yet'};\n        console.log(`\n        \n        this is \"h\" inside of clockingbtns\n        \n        \n        ${JSON.stringify(headers)}\n        \n        \n        \n        `)\n\n        async function f() {\n        //fetch request\n            const r = await fetch(`/api/timecard/${id}`, {\n            method,\n            body: JSON.stringify(body),\n            headers\n        })\n            // console.log(` this is the r with the r.json(): \n            //     ${JSON.stringify(r)}`);\n                const r1 = await r.json();\n                const res = await r1;\n                console.log('THIS IS RES!!!!!!',res)\n                setOpenTc(res);\n        }\n\n       f();\n    }\n\n\n//functions =================================================================\n    const d = () => new Date();\n\n    const [btnValues, setBtnValues] = useState(state ? state : ['Clock In']);\n    useEffect( () => { setBtnValues(state ? state : ['Clock In']) }, [state])\n    const btnSetter = (state, jid) => {\n        let newTcBody;\n        // eslint-disable-next-line\n        switch (state) {\n            case 'Clock In':\n                console.log('this is the jid', jid)\n                newTcBody = {\n                    date: d(),\n                    clockIn: d()\n                  }\n                newTc(jobId, 'POST', newTcBody);               \n                setBtnValues(['Lunch In', 'Break In', 'Clock Out']);\n                break;\n            case 'Lunch In':\n                newTcBody = {\n                    lunchIn: d()\n                  }\n                  console.log(`++++++++++++ this is the body of the put lunchIn request +++++++++++++++++\n                  `,newTcBody,tcid)\n                newTc(tcid, 'PUT', newTcBody); \n            \n                setBtnValues(['Lunch Out']);\n                break;\n            case 'Lunch Out':\n                newTcBody = {\n                    lunchOut: d()\n                    }\n                    console.log(`++++++++++++ this is the body of the put lunchOut request +++++++++++++++++\n                    `,newTcBody,tcid)\n                newTc(tcid, 'PUT', newTcBody); \n                \n                setBtnValues(['Break In', 'Clock Out']);\n                break;\n            case 'Break In':\n                newTcBody = {\n                    breakIn: d()\n                    }\n                    console.log(`++++++++++++ this is the body of the put breakIn request +++++++++++++++++\n                    `,newTcBody,tcid)\n                newTc(tcid, 'PUT', newTcBody); \n                \n                setBtnValues(['Break Out']);\n                break;\n            case 'Break Out':\n                newTcBody = {\n                    breakOut: d()\n                    }\n                    console.log(`++++++++++++ this is the body of the put breakOut request +++++++++++++++++\n                    `,newTcBody,tcid)\n                newTc(tcid, 'PUT', newTcBody); \n                \n                setBtnValues(['Break In', 'Clock Out']);\n                break;\n            case 'Clock Out':\n                newTcBody = {\n                    clockOut: d()\n                    }\n                    console.log(`++++++++++++ this is the body of the put clockOut request +++++++++++++++++\n                    `,newTcBody,tcid)\n                newTc(tcid, 'PUT', newTcBody); \n                \n                setBtnValues(['Clock In']);\n                break;\n        }\n    }\n\n\n\n    const btnArr = btnValues.map((v, i) => \n        <li key={i} data-id={jobId}>\n            <div id = 'btnList'>\n                <button className=\"btn-floating btn-small waves-effect waves-light blue hoverable\" value = {v} onClick = {() => btnSetter(v, jobId) }>\n                    <i className=\"material-icons small\">add_alarm</i>\n                </button>\n                <div>{v}</div>\n            </div>\n        </li>\n    );\n\n\n    return (\n        <li>\n            {btnArr}\n        </li>\n    );\n\n\n}\n\nexport default ClockingBtns;"]},"metadata":{},"sourceType":"module"}