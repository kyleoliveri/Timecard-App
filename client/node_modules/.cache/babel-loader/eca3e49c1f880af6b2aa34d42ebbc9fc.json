{"ast":null,"code":"import _slicedToArray from \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/DashboardPage/Dashboard/Dashboard.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Navbar from '../../Layout/Navbar/Navbar.js';\nimport UserDashboardCard from '../UserDashboardCard/UserDashboardCard.js';\nimport BtnCardReveal from '../../BtnList/BtnCardReveal';\nimport { useHttp } from '../../Hooks/Fetch';\nimport AuthContext from '../../../context/auth/AuthContext';\nimport setAuthToken from '../../../utils/setAuthToken';\n\nconst Dashboard = props => {\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    authContext.loadUser();\n  }, []);\n\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  } else {\n    props.history.push('/login');\n  }\n\n  console.log(\"\\n    this is the token:\\n    \".concat(authContext.token, \"\\n    \\n    \"));\n  const loading = 'loading . . .';\n\n  const _useState = useState(loading),\n        _useState2 = _slicedToArray(_useState, 2),\n        profile = _useState2[0],\n        setProfile = _useState2[1];\n\n  const profileLoadingChecker = obj => {\n    obj ? setProfile(obj) : setProfile(loading);\n  };\n\n  const _useState3 = useState(loading),\n        _useState4 = _slicedToArray(_useState3, 2),\n        jobs = _useState4[0],\n        setJobs = _useState4[1];\n\n  const jobsLoadingChecker = arr => {\n    arr[0] ? setJobs(arr) : setJobs(loading);\n  };\n\n  const token = authContext.token;\n  let h = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  h['x-auth-token'] = token; //fetch user profile =============================================================================================\n\n  let fetchedProfile = useHttp('http://localhost:5000/api/user', 'GET', '', h, []);\n  const p = fetchedProfile[1];\n  useEffect(() => profileLoadingChecker(p[0]), [p[0]]);\n  const profileloading = fetchedProfile[0];\n\n  if (profile) {\n    console.log(\"\\n        \\n            this is fetchedprofile\\n            \".concat(profile.name, \"\\n            \\n            \"));\n  } //fetch Job Profile ==============================================================================================\n\n\n  let fetchedJobs = useHttp('http://localhost:5000/api/job', 'GET', '', h, []);\n  const jobloading = fetchedJobs[0];\n  const j = fetchedJobs[1];\n  useEffect(() => jobsLoadingChecker(j), [j]);\n  console.log(\"\\n        \\n        this is jobprofile\\n        \".concat(j, \"\\n        \\n        \")); // load dom ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    title: \"Dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"body\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(UserDashboardCard, {\n    name: profile === loading ? profile : profile.name,\n    email: profile === loading ? profile : profile.email,\n    jobTitle: profile === loading ? profile : profile.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), jobs === loading ? jobs : jobs.map((v, i) => {\n    return React.createElement(BtnCardReveal, {\n      key: i,\n      title: v.name,\n      description: v.description,\n      role: v.role,\n      type: v.jobType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    });\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/KyleOliveri/Desktop/uclaFullStackCoding/Homework/Group-Project-3/timecard-app/client/src/components/DashboardPage/Dashboard/Dashboard.js"],"names":["React","useState","useEffect","useContext","Navbar","UserDashboardCard","BtnCardReveal","useHttp","AuthContext","setAuthToken","Dashboard","props","authContext","loadUser","localStorage","token","history","push","console","log","loading","profile","setProfile","profileLoadingChecker","obj","jobs","setJobs","jobsLoadingChecker","arr","h","fetchedProfile","p","profileloading","name","fetchedJobs","jobloading","j","email","date","map","v","i","description","role","jobType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport Navbar from '../../Layout/Navbar/Navbar.js';\nimport UserDashboardCard from '../UserDashboardCard/UserDashboardCard.js';\nimport BtnCardReveal from '../../BtnList/BtnCardReveal';\nimport { useHttp } from '../../Hooks/Fetch';\nimport AuthContext from '../../../context/auth/AuthContext';\nimport setAuthToken from '../../../utils/setAuthToken';\n\nconst Dashboard = (props) => {\n\n    const authContext = useContext(AuthContext);\n\n    useEffect(() => {\n        authContext.loadUser();\n    }, [])\n\n\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    } else {\n        props.history.push('/login');\n    }\n\n\n    console.log(`\n    this is the token:\n    ${authContext.token}\n    \n    `)\n\n    \n    const loading = 'loading . . .';\n    const [profile, setProfile] = useState(loading)\n    const profileLoadingChecker = ( obj )  => { obj ? setProfile(obj) : setProfile(loading) };\n\n    const [jobs, setJobs] = useState(loading)\n    const jobsLoadingChecker = ( arr )  => { arr[0] ? setJobs(arr) : setJobs(loading) };\n\n    const token = authContext.token;\n    let h = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n    }\n    h['x-auth-token'] = token;\n\n    //fetch user profile =============================================================================================\n        let fetchedProfile = useHttp('http://localhost:5000/api/user', 'GET', '', h, []);\n        const p = fetchedProfile[1];\n\n        useEffect( () => profileLoadingChecker(p[0]), [p[0]] );\n        \n        const profileloading = fetchedProfile[0];\n\n\n        if(profile){\n            console.log(`\n        \n            this is fetchedprofile\n            ${profile.name}\n            \n            `);\n        }\n\n        \n        \n    //fetch Job Profile ==============================================================================================\n        let fetchedJobs = useHttp('http://localhost:5000/api/job', 'GET', '', h, []);\n        const jobloading = fetchedJobs[0];\n        const j = fetchedJobs[1];\n\n        useEffect( () => jobsLoadingChecker(j), [j] );\n\n        console.log(`\n        \n        this is jobprofile\n        ${j}\n        \n        `);\n        \n\n\n    // load dom ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\n    return (\n        <div>\n            \n            <header>\n                <Navbar title=\"Dashboard\"></Navbar>\n            </header>\n            <main>\n                <body>\n                    <UserDashboardCard \n                        name= { profile === loading ? profile : profile.name }\n                        email= { profile === loading ? profile : profile.email }\n                        jobTitle= { profile === loading ? profile : profile.date }\n                    />\n\n                    { jobs === loading ? jobs : jobs.map( (v, i) => {\n                        return <BtnCardReveal\n                        key = { i }\n                        title = { v.name }\n                        description = { v.description }\n                        role = { v.role }\n                        type = { v.jobType }\n                        />\n                        }) \n                    }\n                </body>\n            </main>\n        </div>\n    )\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}